# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-11-26 17:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mobiles.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16)),
                ('item_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'admission_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.CharField(blank=True, max_length=200, null=True)),
                ('read_by', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField()),
                ('read', models.IntegerField()),
            ],
            options={
                'db_table': 'alert',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllergenCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'allergen_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AntenatalAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField()),
                ('create_user_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('enrollment_id', models.IntegerField()),
                ('fundusheight', models.FloatField(blank=True, db_column='fundusHeight', null=True)),
                ('fhr', models.FloatField(blank=True, null=True)),
                ('fetal_lie', models.CharField(blank=True, max_length=12, null=True)),
                ('fetal_presentation_id', models.IntegerField(blank=True, null=True)),
                ('fetal_brain_relationship_id', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('lab_request_code', models.CharField(blank=True, max_length=20, null=True)),
                ('scan_request_code', models.CharField(blank=True, max_length=20, null=True)),
                ('nextappointmentdate', models.DateTimeField(blank=True, db_column='nextAppointmentDate', null=True)),
            ],
            options={
                'db_table': 'antenatal_assessment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AntenatalNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('antenatal_enrollment_id', models.IntegerField()),
                ('note', models.TextField()),
                ('type', models.CharField(max_length=18)),
                ('antenatal_assesment_id', models.IntegerField(blank=True, null=True)),
                ('entered_on', models.DateTimeField(blank=True, null=True)),
                ('entered_by', models.IntegerField()),
            ],
            options={
                'db_table': 'antenatal_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AntenatalPackageItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_id', models.IntegerField()),
                ('item_id', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=12, null=True)),
                ('item_code', models.CharField(blank=True, max_length=20, null=True)),
                ('item_usage', models.IntegerField()),
            ],
            options={
                'db_table': 'antenatal_package_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AntenatalPackages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('billing_code', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'antenatal_packages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('attended_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('editor_id', models.IntegerField()),
            ],
            options={
                'db_table': 'appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentClinic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('a_limit', models.IntegerField()),
                ('queue_type', models.CharField(blank=True, max_length=75, null=True)),
            ],
            options={
                'db_table': 'appointment_clinic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField()),
                ('creator', models.IntegerField()),
                ('type', models.CharField(max_length=11)),
                ('clinic_id', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
                ('is_all_day', models.IntegerField()),
                ('resource_id', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('patient_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appointment_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentInvitee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('staff_id', models.IntegerField()),
            ],
            options={
                'db_table': 'appointment_invitee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('resource_id', models.IntegerField()),
            ],
            options={
                'db_table': 'appointment_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApprovedQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('type', models.CharField(max_length=14)),
                ('request_id', models.IntegerField()),
                ('approved_time', models.DateTimeField()),
                ('queue_read', models.IntegerField()),
            ],
            options={
                'db_table': 'approved_queue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvConsulting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('create_user_id', models.IntegerField()),
                ('create_time', models.IntegerField()),
                ('next_appointment', models.DateField()),
            ],
            options={
                'db_table': 'arv_consulting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvConsultingData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arv_consulting_id', models.IntegerField()),
                ('type', models.CharField(max_length=50)),
                ('type_data_id', models.IntegerField()),
            ],
            options={
                'db_table': 'arv_consulting_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvDrug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'db_table': 'arv_drug',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvDrugData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('arv_drug_id', models.IntegerField()),
                ('type', models.CharField(max_length=13)),
                ('dose', models.CharField(max_length=11)),
                ('state', models.CharField(max_length=11)),
                ('prescribed_by', models.IntegerField()),
                ('date_prescribed', models.DateTimeField()),
            ],
            options={
                'db_table': 'arv_drug_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arv_template_id', models.IntegerField()),
                ('category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'arv_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvHistoryTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'arv_history_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvHistoryTemplateData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arv_history_template_id', models.IntegerField()),
                ('label', models.CharField(max_length=200)),
                ('datatype', models.CharField(max_length=9)),
                ('relation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'arv_history_template_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvPatientHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('arv_history_id', models.IntegerField()),
                ('create_uid', models.IntegerField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'arv_patient_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArvPatientHistoryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arv_patient_history_id', models.IntegerField()),
                ('arv_history_template_data_id', models.IntegerField()),
                ('value', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'arv_patient_history_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttachmentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('role_ids', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'attachment_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('object', models.CharField(max_length=50)),
                ('object_id', models.IntegerField()),
                ('field', models.CharField(max_length=50)),
                ('old_value', models.TextField()),
                ('new_value', models.TextField()),
                ('update_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'audit_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorizationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('status', models.CharField(max_length=8)),
                ('creator_id', models.IntegerField()),
                ('create_date', models.DateTimeField()),
                ('receive_date', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=70, null=True)),
                ('channel_id', models.IntegerField(blank=True, null=True)),
                ('channel_address', models.CharField(blank=True, max_length=50, null=True)),
                ('scheme_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'authorization_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorizationCodeNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorization_code_id', models.IntegerField()),
                ('note', models.TextField()),
                ('create_time', models.DateTimeField()),
                ('create_user', models.IntegerField()),
            ],
            options={
                'db_table': 'authorization_code_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('icon', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'badge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('room_id', models.IntegerField()),
                ('available', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'bed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BedCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('bed_id', models.IntegerField(blank=True, null=True)),
                ('date_admitted', models.DateTimeField(blank=True, null=True)),
                ('stage', models.IntegerField()),
                ('run_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'bed_charge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bills',
            fields=[
                ('bill_id', models.AutoField(primary_key=True, serialize=False)),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('transaction_date', models.DateTimeField()),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('bill_source_id', models.IntegerField(blank=True, null=True)),
                ('bill_sub_source_id', models.IntegerField(blank=True, null=True)),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('transaction_type', models.CharField(max_length=19)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('copay', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('balance', models.FloatField()),
                ('price_type', models.CharField(max_length=16)),
                ('discounted', models.CharField(blank=True, max_length=3, null=True)),
                ('discounted_by', models.IntegerField(blank=True, null=True)),
                ('invoiced', models.CharField(blank=True, max_length=3, null=True)),
                ('auth_code', models.CharField(blank=True, max_length=70, null=True)),
                ('reviewed', models.IntegerField()),
                ('transferred', models.IntegerField()),
                ('claimed', models.IntegerField()),
                ('validated', models.IntegerField()),
                ('voucher_id', models.IntegerField(blank=True, null=True)),
                ('hospid', models.IntegerField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=20, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('cost_centre_id', models.IntegerField(blank=True, null=True)),
                ('revenue_account_id', models.IntegerField(blank=True, null=True)),
                ('item_code', models.CharField(blank=True, max_length=20, null=True)),
                ('insurance_code', models.CharField(blank=True, max_length=20, null=True)),
                ('quantity', models.FloatField()),
                ('unit_price', models.IntegerField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('cancelled_on', models.DateTimeField(blank=True, null=True)),
                ('cancelled_by', models.IntegerField(blank=True, null=True)),
                ('misc', models.IntegerField()),
            ],
            options={
                'db_table': 'bills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillsSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'bills_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('hospital_id', models.IntegerField()),
            ],
            options={
                'db_table': 'block',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BodyPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'body_part',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CareTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'care_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField()),
                ('create_user_id', models.IntegerField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('line_ids', models.TextField(blank=True, null=True)),
                ('patient_id', models.IntegerField()),
                ('signature_id', models.IntegerField(blank=True, null=True)),
                ('scheme_id', models.IntegerField()),
                ('type', models.CharField(max_length=2)),
                ('status', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'claim',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('clinicid', models.AutoField(db_column='clinicID', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=70)),
                ('state_id', models.IntegerField()),
                ('lga_id', models.CharField(blank=True, max_length=50, null=True)),
                ('hosp_code', models.CharField(blank=True, max_length=10, null=True)),
                ('folio_prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('location_lat', models.DecimalField(decimal_places=10, max_digits=20)),
                ('location_long', models.DecimalField(decimal_places=10, max_digits=20)),
                ('class_field', models.CharField(db_column='class', max_length=4)),
                ('phone_no', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'clinic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicalTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('objective', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=10)),
                ('source', models.CharField(blank=True, max_length=10, null=True)),
                ('source_instance_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'clinical_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicalTaskChart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_id', models.IntegerField(blank=True, null=True)),
                ('patient_id', models.IntegerField()),
                ('clinical_task_data_id', models.IntegerField()),
                ('nursing_service_id', models.IntegerField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=10, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('collected_by', models.IntegerField()),
                ('collected_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'clinical_task_chart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicalTaskCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('create_user_id', models.IntegerField()),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'clinical_task_combo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicalTaskComboData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinical_task_combo_id', models.IntegerField()),
                ('type', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('frequency', models.IntegerField()),
                ('interval', models.IntegerField()),
                ('task_count', models.IntegerField()),
            ],
            options={
                'db_table': 'clinical_task_combo_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicalTaskData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinical_task_id', models.IntegerField()),
                ('drug_id', models.IntegerField(blank=True, null=True)),
                ('drug_generic_id', models.IntegerField(blank=True, null=True)),
                ('dose', models.CharField(blank=True, max_length=11, null=True)),
                ('frequency', models.CharField(max_length=16)),
                ('entry_time', models.DateTimeField()),
                ('last_round_time', models.DateTimeField(blank=True, null=True)),
                ('next_round_time', models.DateTimeField(blank=True, null=True)),
                ('end_round_time', models.DateTimeField(blank=True, null=True)),
                ('task_count', models.IntegerField()),
                ('round_count', models.IntegerField()),
                ('status', models.CharField(max_length=10)),
                ('billed', models.IntegerField()),
                ('type_id', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('cancel_reason', models.CharField(blank=True, max_length=254, null=True)),
                ('cancelled_by', models.IntegerField(blank=True, null=True)),
                ('cancel_time', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('private', models.IntegerField()),
            ],
            options={
                'db_table': 'clinical_task_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_id', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(max_length=6)),
                ('primary', models.IntegerField()),
                ('relation', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CostCentre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('analytical_code', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'cost_centre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=50, unique=True)),
                ('iso_alpha2_code', models.CharField(max_length=2)),
                ('iso_alpha3_code', models.CharField(blank=True, max_length=3, null=True)),
                ('dialing_code', models.CharField(blank=True, max_length=10, null=True)),
                ('iso_numeric', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreditLimit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expiration', models.DateField()),
                ('set_by', models.IntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'credit_limit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CreditLimitAudit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expiration', models.DateField()),
                ('set_by', models.IntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('date_field', models.DateTimeField(db_column='date_')),
            ],
            options={
                'db_table': 'credit_limit_audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert_number', models.CharField(blank=True, max_length=25, null=True)),
                ('age_at_death', models.IntegerField()),
                ('datetime_of_death', models.DateTimeField()),
                ('patient_id', models.IntegerField(unique=True)),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('primary_cause_id', models.IntegerField(blank=True, null=True)),
                ('secondary_cause_id', models.IntegerField(blank=True, null=True)),
                ('validated_by_id', models.IntegerField(blank=True, null=True)),
                ('validate_on', models.DateTimeField(blank=True, null=True)),
                ('create_uid', models.IntegerField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'death',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dentistry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('billing_code', models.CharField(max_length=10)),
                ('category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'dentistry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DentistryCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'dentistry_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DentistryTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('body_part', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dentistry_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('cost_centre_id', models.IntegerField()),
            ],
            options={
                'db_table': 'departments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Diagnoses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(max_length=6)),
                ('case', models.CharField(blank=True, max_length=500, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('oi', models.IntegerField()),
                ('hospid', models.IntegerField()),
            ],
            options={
                'db_table': 'diagnoses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiagnosesFull',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(max_length=6)),
                ('case', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'diagnoses_full',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DischargeTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=30, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'discharge_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DispensedDrugs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_id', models.IntegerField()),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('unfilled_quantity', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('transaction_type', models.CharField(blank=True, max_length=20, null=True)),
                ('billed_to', models.IntegerField()),
                ('date_dispensed', models.DateTimeField()),
                ('pharmacist_id', models.CharField(max_length=11)),
                ('service_center_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dispensed_drugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('sql_query', models.TextField()),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'distribution_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionListContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_id', models.IntegerField()),
                ('patient_id', models.CharField(max_length=11)),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'db_table': 'distribution_list_contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=70, null=True)),
            ],
            options={
                'db_table': 'district',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DoctorsSubscribed',
            fields=[
                ('roomid', models.AutoField(db_column='roomID', primary_key=True, serialize=False)),
                ('staffid', models.CharField(blank=True, db_column='staffID', max_length=15, null=True)),
                ('timestamp', models.IntegerField(blank=True, null=True)),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'doctors_subscribed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DoctorWhoSawWho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.FloatField()),
                ('datetime', models.DateTimeField()),
                ('scheme_id', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'doctor_who_saw_who',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('billing_code', models.CharField(blank=True, max_length=30, null=True)),
                ('create_date', models.DateTimeField()),
                ('create_user_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'drt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('drug_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('expiration_date', models.DateField()),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'drug_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugBodySystems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'drug_body_systems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('who_cat_label', models.CharField(blank=True, max_length=15, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('complementary', models.IntegerField()),
            ],
            options={
                'db_table': 'drug_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugFormulary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'drug_formulary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugFormularyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_formulary_id', models.IntegerField()),
                ('generic_id', models.IntegerField()),
            ],
            options={
                'db_table': 'drug_formulary_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugGenerics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('name', models.CharField(max_length=30)),
                ('category_ids', models.CharField(blank=True, max_length=32, null=True)),
                ('service_centre_ids', models.CharField(blank=True, max_length=32, null=True)),
                ('who_cat_labels', models.CharField(blank=True, max_length=15, null=True)),
                ('body_systems_rel', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.CharField(blank=True, max_length=100, null=True)),
                ('form', models.CharField(blank=True, max_length=70, null=True)),
                ('description', models.CharField(blank=True, max_length=70, null=True)),
                ('low_stock_level', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'drug_generics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugManufacturers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'drug_manufacturers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugRequisition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField()),
                ('create_user_id', models.IntegerField()),
                ('status', models.CharField(max_length=9)),
                ('last_action_user', models.IntegerField(blank=True, null=True)),
                ('last_action', models.CharField(blank=True, max_length=20, null=True)),
                ('last_action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'drug_requisition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugRequisitionAudit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=20)),
                ('last_action_user', models.IntegerField(blank=True, null=True)),
                ('last_action', models.CharField(blank=True, max_length=50, null=True)),
                ('last_action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'drug_requisition_audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugRequisitionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requisition_id', models.IntegerField()),
                ('drug_id', models.IntegerField(blank=True, null=True)),
                ('item_code', models.CharField(blank=True, max_length=20, null=True)),
                ('quantity', models.FloatField()),
                ('batch_name', models.CharField(blank=True, max_length=50, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'drug_requisition_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drugs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('billing_code', models.CharField(max_length=10)),
                ('drug_generic_id', models.IntegerField()),
                ('manufacturer_id', models.IntegerField()),
                ('stock_uom', models.CharField(blank=True, max_length=30, null=True)),
                ('erp_product_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'drugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugSuperGeneric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField()),
                ('last_modified_by', models.IntegerField(blank=True, null=True)),
                ('last_modified_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'drug_super_generic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugSuperGenericData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'drug_super_generic_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('initiator_id', models.IntegerField()),
                ('department_id', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
                ('open', models.IntegerField()),
                ('canceled', models.IntegerField()),
                ('follow_up', models.IntegerField()),
                ('claimed', models.IntegerField()),
                ('signed_by', models.IntegerField(blank=True, null=True)),
                ('signed_on', models.DateTimeField(blank=True, null=True)),
                ('triaged_on', models.DateTimeField(blank=True, null=True)),
                ('triaged_by', models.IntegerField(blank=True, null=True)),
                ('scheme_id', models.IntegerField(blank=True, null=True)),
                ('bill_line_id', models.CharField(blank=True, max_length=100, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'encounter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EncounterAddendum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('user_id', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'encounter_addendum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EncounterForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounter_id', models.IntegerField()),
                ('form_id', models.IntegerField()),
                ('time_added', models.DateTimeField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'encounter_form',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnrollmentsAntenatal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestcode', models.CharField(blank=True, db_column='requestCode', max_length=20, null=True)),
                ('active', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('package_id', models.IntegerField(blank=True, null=True)),
                ('enrolled_at', models.IntegerField()),
                ('enrolled_on', models.DateTimeField()),
                ('enrolled_by', models.IntegerField()),
                ('booking_indication', models.CharField(max_length=15)),
                ('complication_note', models.TextField(blank=True, null=True)),
                ('obgyn_id', models.IntegerField(blank=True, null=True)),
                ('lmp_date', models.DateField(blank=True, null=True)),
                ('lmp_at_enrollment', models.DateField(blank=True, null=True)),
                ('lmp_source', models.CharField(blank=True, max_length=20, null=True)),
                ('ed_date', models.DateField(blank=True, null=True)),
                ('baby_father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('baby_father_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('baby_father_blood_group', models.CharField(blank=True, max_length=10, null=True)),
                ('gravida', models.CharField(max_length=3)),
                ('para', models.CharField(max_length=3)),
                ('alive', models.CharField(max_length=3)),
                ('abortions', models.CharField(max_length=3)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('close_note', models.TextField(blank=True, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enrollments_antenatal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnrollmentsImmunization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15, unique=True)),
                ('enrolled_at', models.IntegerField()),
                ('enrolled_on', models.DateTimeField()),
                ('enrolled_by', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'enrollments_immunization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnrollmentsIvf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('ivf_file_no', models.CharField(max_length=20)),
                ('patient_id', models.IntegerField()),
                ('husband_id', models.IntegerField(blank=True, null=True)),
                ('date_enrolled', models.DateTimeField()),
                ('enrolled_by_id', models.IntegerField()),
                ('indication', models.TextField(blank=True, null=True)),
                ('hormone_fsh', models.CharField(blank=True, max_length=50, null=True)),
                ('hormone_lh', models.CharField(blank=True, max_length=50, null=True)),
                ('hormone_prol', models.CharField(blank=True, max_length=50, null=True)),
                ('hormone_amh', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_hormone_fsh', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_hormone_lh', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_hormone_prol', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_hormone_testosterone', models.CharField(blank=True, max_length=50, null=True)),
                ('sfa_count', models.IntegerField(blank=True, null=True)),
                ('sfa_motility', models.IntegerField(blank=True, null=True)),
                ('sfa_morphology', models.IntegerField(blank=True, null=True)),
                ('serology_hiv', models.CharField(blank=True, max_length=50, null=True)),
                ('serology_hep_b', models.CharField(blank=True, max_length=50, null=True)),
                ('serology_hep_c', models.CharField(blank=True, max_length=50, null=True)),
                ('serology_vdrl', models.CharField(blank=True, max_length=50, null=True)),
                ('serology_chlamydia', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_serology_hiv', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_serology_hep_b', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_serology_hep_c', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_serology_vdrl', models.CharField(blank=True, max_length=50, null=True)),
                ('husband_serology_rbs', models.CharField(blank=True, max_length=50, null=True)),
                ('andrology_details', models.TextField(blank=True, null=True)),
                ('stimulation_cycle', models.CharField(blank=True, max_length=10, null=True)),
                ('stimulation_lmp_date', models.DateField(blank=True, null=True)),
                ('stimulation_method', models.IntegerField(blank=True, null=True)),
                ('stimulation_suprefact', models.CharField(blank=True, max_length=50, null=True)),
                ('stimulation_zoladex', models.CharField(blank=True, max_length=50, null=True)),
                ('stimulation_fsh', models.CharField(blank=True, max_length=50, null=True)),
                ('stimulation_hmg', models.CharField(blank=True, max_length=50, null=True)),
                ('closed_on', models.DateTimeField(blank=True, null=True)),
                ('closed_by', models.IntegerField(blank=True, null=True)),
                ('package_id', models.IntegerField()),
            ],
            options={
                'db_table': 'enrollments_ivf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnrollmentsLabour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('enrolled_at', models.IntegerField(blank=True, null=True)),
                ('enrolled_on', models.DateTimeField()),
                ('enrolled_by', models.IntegerField(blank=True, null=True)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('lmpdate', models.DateField(blank=True, db_column='lmpDate', null=True)),
                ('baby_father_name', models.CharField(blank=True, max_length=70, null=True)),
                ('baby_father_phone', models.CharField(blank=True, max_length=13, null=True)),
                ('baby_father_blood_group', models.CharField(blank=True, max_length=4, null=True)),
                ('gravida', models.IntegerField(blank=True, null=True)),
                ('para', models.IntegerField(blank=True, null=True)),
                ('alive', models.IntegerField(blank=True, null=True)),
                ('abortions', models.IntegerField(blank=True, null=True)),
                ('current_pregnancy', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'enrollments_labour',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnrollmentsSti',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('patient_id', models.IntegerField(unique=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('care_entry_point_id', models.IntegerField(blank=True, null=True)),
                ('date_hiv_confirmed', models.DateField()),
                ('mode_of_test_id', models.IntegerField(blank=True, null=True)),
                ('location_of_test', models.TextField(blank=True, null=True)),
                ('prior_art_id', models.IntegerField(blank=True, null=True)),
                ('enrolled_on', models.DateField()),
                ('enrolled_at', models.CharField(max_length=75)),
                ('enrolled_by_id', models.IntegerField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'enrollments_sti',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstimatedBillLines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_bill_id', models.IntegerField()),
                ('services_id', models.IntegerField()),
                ('unit_price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('item_description', models.CharField(max_length=200)),
                ('item_cost_id', models.IntegerField()),
                ('service_description', models.CharField(max_length=200)),
                ('item_code', models.CharField(max_length=11)),
                ('item_insurance_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'estimated_bill_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstimatedBills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_code', models.CharField(max_length=50)),
                ('patient_id', models.IntegerField()),
                ('valid_till', models.DateField()),
                ('total_estimate', models.DecimalField(decimal_places=0, max_digits=10)),
                ('date_created', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('inpatient_id', models.IntegerField(blank=True, null=True)),
                ('scheme_id', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.IntegerField()),
                ('narration', models.TextField()),
            ],
            options={
                'db_table': 'estimated_bills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExamReportTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('body_part', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'exam_report_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExamRooms',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=50)),
                ('available', models.IntegerField()),
                ('consultant_id', models.IntegerField(blank=True, null=True)),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'exam_rooms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExamTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('category_id', models.IntegerField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'exam_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExamTemplateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'exam_template_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eye',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('shape', models.CharField(blank=True, max_length=10, null=True)),
                ('coords', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eye',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EyeReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eye_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FakeAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('service', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField()),
                ('note', models.TextField()),
            ],
            options={
                'db_table': 'fake_appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FakeContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, choices=[('MOBILE', 'MOBILE'), ('HOME', 'HOME'), ('WORK', 'WORK')], max_length=20, null=True)),
                ('primary', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'fake_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FakePatient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[('Mr', 'Mr'), ('Miss', 'Miss'), ('Mrs', 'Mrs'), ('Dr', 'Dr'), ('Prof', 'Prof'), ('Barr', 'Barr'), ('Nana', 'Nana'), ('Honourable', 'Honourable'), ('His Excellency', 'His Excellency'), ('Her Excellency', 'Her Excellency'), ('Alhaji', 'Alhaji'), ('Chief', 'Chief'), ('Engr', 'Engr'), ('Admiral', 'Admiral'), ('Airman', 'Airman'), ('Captain', 'Captain'), ('Brigadier General', 'Brigadier General'), ('Airman First Class', 'Airman First Class'), ('Army Private First Class/Marine Lance Corporal', 'Army Private First Class/Marine Lance Corporal'), ('Army Private/Marine Private First Class', 'Army Private/Marine Private First Class'), ('Army Sergeant First Class/Marine Gunnery Sergeant', 'Army Sergeant First Class/Marine Gunnery Sergeant'), ('Army Sergeant First Class/Marine Gunnery Sergeant', 'Army Sergeant First Class/Marine Gunnery Sergeant'), ('Chief Master Sergeant', 'Chief Master Sergeant'), ('Chief Petty Officer', 'Chief Petty Officer'), ('Chief Warrant Officer', 'Chief Warrant Officer'), ('Colonel', 'Colonel'), ('Commander', 'Commander'), ('Corporal', 'Corporal'), ('Ensign', 'Ensign'), ('First Lieutenant', 'First Lieutenant'), ('Fleet Admiral', 'Fleet Admiral'), ('General', 'General'), ('General of the Air Force', 'General of the Air Force'), ('General of the Army', 'General of the Army'), ('Lieutenant', 'Lieutenant'), ('Lieutenant Colonel', 'Lieutenant Colonel'), ('Lieutenant Commander', 'Lieutenant Commander'), ('Lieutenant General', 'Lieutenant General'), ('Lieutenant Junior Grade', 'Lieutenant Junior Grade'), ('Major', 'Major'), ('Major General', 'Major General'), ('Master Chief Petty Officer', 'Master Chief Petty Officer'), ('Master Sergeant', 'Master Sergeant'), ('Petty Officer, First Class', 'Petty Officer, First Class'), ('Petty Officer, Second Class', 'Petty Officer, Second Class'), ('Petty Officer, Third Class', 'Petty Officer, Third Class'), ('Private', 'Private'), ('Rear Admiral', 'Rear Admiral'), ('Recruit', 'Recruit'), ('Seaman', 'Seaman'), ('Seaman Apprentice', 'Seaman Apprentice'), ('Seaman Recruit', 'Seaman Recruit'), ('Second Lieutenant', 'Second Lieutenant'), ('Senior Airman', 'Senior Airman'), ('Senior Chief Petty Officer', 'Senior Chief Petty Officer'), ('Senior Master Sergeant', 'Senior Master Sergeant'), ('Sergeant', 'Sergeant'), ('Sergeant Major', 'Sergeant Major'), ('Staff Sergeant', 'Staff Sergeant'), ('Technical Sergeant', 'Technical Sergeant'), ('Vice Admiral', 'Vice Admiral'), ('Warrant Officer', 'Warrant Officer')], max_length=150, null=True)),
                ('fname', models.CharField(blank=True, max_length=150, null=True, verbose_name='first name')),
                ('lname', models.CharField(blank=True, max_length=150, null=True, verbose_name='last name')),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=20, null=True, verbose_name='occupation')),
                ('work_address', models.TextField(blank=True, null=True, verbose_name='work Address')),
                ('res_address', models.TextField(blank=True, null=True, verbose_name='address')),
                ('blood_group', models.CharField(blank=True, choices=[('UNKNOWN', 'UNKNOWN'), ('O-', 'O-'), ('O+', 'O+'), ('A-', 'A-'), ('A+', 'A+'), ('B-', 'B-'), ('B+', 'B+'), ('AB-', 'AB-'), ('AB+', 'AB+')], max_length=10, null=True)),
                ('geno_type', models.CharField(blank=True, choices=[('UNKNOWN', 'UNKNOWN'), ('AA', 'AA'), ('AS', 'AS'), ('SS', 'SS'), ('SC', 'SC'), ('AC', 'AC'), ('CC', 'CC'), ('Thalassemia', 'Thalassemia'), ('Others', 'Others')], max_length=10, null=True, verbose_name='genotype')),
                ('next_kin_fname', models.CharField(blank=True, max_length=30, null=True, verbose_name='first Name')),
                ('next_kin_lname', models.CharField(blank=True, max_length=30, null=True, verbose_name='last Name')),
                ('next_kin_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone Number')),
                ('next_kin_address', models.TextField(blank=True, null=True, verbose_name='Address')),
            ],
            options={
                'db_table': 'fake_patient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FetalBrainRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'fetal_brain_relationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FetalPresentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'fetal_presentation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FluidChart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('in_patient_id', models.IntegerField()),
                ('route_id', models.IntegerField()),
                ('vol', models.FloatField()),
                ('type', models.CharField(max_length=11)),
                ('user_id', models.IntegerField()),
                ('time_entered', models.DateTimeField()),
            ],
            options={
                'db_table': 'fluid_chart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FluidRoute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'fluid_route',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'form',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_id', models.IntegerField()),
                ('form_question_id', models.IntegerField()),
            ],
            options={
                'db_table': 'form_component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormPatientQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('form_id', models.IntegerField()),
                ('form_question_id', models.IntegerField()),
                ('create_uid', models.IntegerField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'form_patient_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormPatientQuestionAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_patient_question_id', models.IntegerField()),
                ('form_question_option_id', models.IntegerField()),
                ('value', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'form_patient_question_answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_question_template_id', models.IntegerField()),
                ('category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'form_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormQuestionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_question_template_id', models.IntegerField()),
                ('label', models.CharField(max_length=200)),
                ('datatype', models.CharField(max_length=9)),
                ('relation', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'form_question_option',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FormQuestionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'form_question_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticLab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('billing_code', models.CharField(max_length=10)),
                ('genetic_template_id', models.IntegerField()),
                ('print_layout', models.CharField(max_length=9)),
                ('quality_control_ids', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'genetic_lab',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticLabRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_code', models.CharField(blank=True, max_length=20, null=True)),
                ('female_patient_id', models.IntegerField(blank=True, null=True)),
                ('male_patient_id', models.IntegerField(blank=True, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('request_date', models.DateTimeField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('genetic_lab_id', models.IntegerField()),
                ('genetic_specimen_id', models.IntegerField(blank=True, null=True)),
                ('specimen_received_on', models.DateTimeField(blank=True, null=True)),
                ('specimen_received_by', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'genetic_lab_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticLabResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genetic_lab_request_id', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
                ('time_entered', models.DateTimeField()),
            ],
            options={
                'db_table': 'genetic_lab_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticQualityControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.IntegerField()),
                ('quality_control_type_id', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genetic_quality_control',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticQualityControlTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'genetic_quality_control_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticReagent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'genetic_reagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticRequestReagent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.IntegerField()),
                ('reagent_id', models.IntegerField()),
                ('lot_number', models.CharField(max_length=20)),
                ('date_used', models.DateTimeField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'genetic_request_reagent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticSpecimen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'genetic_specimen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneticTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'genetic_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_id', models.IntegerField()),
                ('category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoryTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'history_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoryTemplateData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history_template_id', models.IntegerField()),
                ('label', models.CharField(max_length=200)),
                ('datatype', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'history_template_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImagingTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('body_part', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'imaging_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImagingTemplateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'imaging_template_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'industry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InPatient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('bed_id', models.IntegerField(blank=True, null=True)),
                ('bed_assign_date', models.DateTimeField(blank=True, null=True)),
                ('date_admitted', models.DateTimeField(blank=True, null=True)),
                ('admitted_by', models.CharField(blank=True, max_length=11, null=True)),
                ('status', models.CharField(max_length=11)),
                ('reason', models.TextField(blank=True, null=True)),
                ('date_discharged', models.DateTimeField(blank=True, null=True)),
                ('date_discharged_full', models.DateTimeField(blank=True, null=True)),
                ('anticipated_discharge_date', models.DateTimeField()),
                ('discharge_note', models.TextField(blank=True, null=True)),
                ('discharged_by', models.CharField(blank=True, max_length=11, null=True)),
                ('discharged_by_full', models.IntegerField(blank=True, null=True)),
                ('hospital_id', models.IntegerField(blank=True, null=True)),
                ('bill_status', models.CharField(max_length=12)),
                ('claimed', models.IntegerField()),
                ('ward_id', models.IntegerField(blank=True, null=True)),
                ('labour_enrollment_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'in_patient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('insurance_scheme', models.IntegerField(blank=True, null=True)),
                ('policy_number', models.CharField(blank=True, max_length=20, null=True)),
                ('enrollee_number', models.CharField(blank=True, max_length=20, null=True)),
                ('coverage_type', models.CharField(blank=True, max_length=25, null=True)),
                ('insurance_expiration', models.DateField(blank=True, null=True)),
                ('company_id', models.IntegerField(blank=True, null=True)),
                ('dependent_id', models.IntegerField(blank=True, null=True)),
                ('parent_enrollee_id', models.CharField(blank=True, max_length=20, null=True)),
                ('principal_external', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'insurance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceBillableItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(blank=True, max_length=20, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('item_group_category_id', models.IntegerField(blank=True, null=True)),
                ('hospid', models.IntegerField()),
            ],
            options={
                'db_table': 'insurance_billable_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceItemsCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(blank=True, max_length=20, null=True)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('followupprice', models.DecimalField(db_column='followUpPrice', decimal_places=2, max_digits=12)),
                ('theatreprice', models.DecimalField(db_column='theatrePrice', decimal_places=2, max_digits=10)),
                ('anaesthesiaprice', models.DecimalField(db_column='anaesthesiaPrice', decimal_places=2, max_digits=10)),
                ('surgeonprice', models.DecimalField(db_column='surgeonPrice', decimal_places=2, max_digits=10)),
                ('co_pay', models.DecimalField(decimal_places=0, max_digits=10)),
                ('insurance_scheme_id', models.IntegerField()),
                ('insurance_code', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(max_length=9)),
                ('capitated', models.IntegerField()),
                ('hospid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'insurance_items_cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceOwners',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=50)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=75, null=True)),
                ('hospid', models.IntegerField()),
            ],
            options={
                'db_table': 'insurance_owners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceSchemes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_name', models.CharField(blank=True, max_length=75, null=True)),
                ('badge_id', models.IntegerField(blank=True, null=True)),
                ('pay_type', models.CharField(max_length=9)),
                ('insurance_type_id', models.IntegerField(blank=True, null=True)),
                ('credit_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reg_cost_individual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reg_cost_company', models.DecimalField(decimal_places=2, max_digits=10)),
                ('hospid', models.IntegerField()),
                ('receivables_account_id', models.IntegerField(blank=True, null=True)),
                ('discount_account_id', models.IntegerField(blank=True, null=True)),
                ('partner_id', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=75, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('logo_url', models.TextField(blank=True, null=True)),
                ('clinical_services_rate', models.FloatField()),
            ],
            options={
                'db_table': 'insurance_schemes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'insurance_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('scheme_id', models.IntegerField(blank=True, null=True)),
                ('cashier_id', models.IntegerField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'invoice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.IntegerField()),
                ('bill_id', models.IntegerField()),
            ],
            options={
                'db_table': 'invoice_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_patient_id', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('user_id', models.IntegerField()),
                ('note', models.TextField()),
            ],
            options={
                'db_table': 'ip_observation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('generic_id', models.IntegerField(blank=True, null=True)),
                ('billing_code', models.CharField(max_length=10)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('erp_product_id', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('item_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('expiration_date', models.DateField()),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'item_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_created', models.DateTimeField()),
            ],
            options={
                'db_table': 'item_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGeneric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'item_generic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGenericData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generic', models.IntegerField()),
                ('item', models.IntegerField()),
            ],
            options={
                'db_table': 'item_generic_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'item_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGroupData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_group', models.IntegerField()),
                ('generic_id', models.IntegerField()),
            ],
            options={
                'db_table': 'item_group_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemGroupSc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_center_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'db_table': 'item_group_sc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfEggCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_id', models.IntegerField(blank=True, null=True)),
                ('time_entered', models.DateTimeField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('collection_time', models.DateTimeField(blank=True, null=True)),
                ('method_id', models.IntegerField(blank=True, null=True)),
                ('done_by_id', models.IntegerField(blank=True, null=True)),
                ('total_left', models.IntegerField(blank=True, null=True)),
                ('total_right', models.IntegerField(blank=True, null=True)),
                ('witness_ids', models.CharField(blank=True, max_length=20, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ivf_egg_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfEggCollectionFollicleData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egg_collection_id', models.IntegerField()),
                ('size_id', models.IntegerField()),
                ('value', models.IntegerField()),
            ],
            options={
                'db_table': 'ivf_egg_collection_follicle_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfEggCollectionMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ivf_egg_collection_method',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfFertilization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('time_entered', models.DateTimeField()),
                ('method_id', models.IntegerField(blank=True, null=True)),
                ('zygote_type', models.CharField(blank=True, max_length=10, null=True)),
                ('cell_no', models.IntegerField(blank=True, null=True)),
                ('witness_ids', models.CharField(blank=True, max_length=50, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ivf_fertilization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfFollicleSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ivf_follicle_size',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfInsemination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('time_entered', models.DateTimeField()),
                ('instance_id', models.IntegerField(blank=True, null=True)),
                ('method_id', models.IntegerField(blank=True, null=True)),
                ('source_id', models.IntegerField(blank=True, null=True)),
                ('total_eggs', models.FloatField(blank=True, null=True)),
                ('total_sperm', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('witness_ids', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ivf_insemination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ivf_methods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_id', models.IntegerField()),
                ('note', models.TextField()),
                ('date', models.DateTimeField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ivf_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfNoteTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ivf_note_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('billing_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ivf_package',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ivf_protocol',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfSampleSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ivf_sample_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfSampleState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ivf_sample_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfSimulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolment_id', models.IntegerField(blank=True, null=True)),
                ('record_date', models.DateTimeField(blank=True, null=True)),
                ('recorded_by_id', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('endo', models.IntegerField(blank=True, null=True)),
                ('e2', models.IntegerField(blank=True, null=True)),
                ('gnrha', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('hmg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ant', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fsh', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ivf_simulation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfSimulationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ivf_simulation_id', models.IntegerField()),
                ('right_side', models.IntegerField()),
                ('left_side', models.IntegerField()),
                ('size_index_id', models.IntegerField()),
            ],
            options={
                'db_table': 'ivf_simulation_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfSpermAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('time_entered', models.DateTimeField()),
                ('instance_id', models.IntegerField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('cell_no', models.IntegerField(blank=True, null=True)),
                ('density', models.FloatField(blank=True, null=True)),
                ('motility', models.FloatField(blank=True, null=True)),
                ('prog', models.CharField(blank=True, max_length=50, null=True)),
                ('abnormal', models.FloatField(blank=True, null=True)),
                ('mar', models.CharField(blank=True, max_length=50, null=True)),
                ('aggl', models.CharField(blank=True, max_length=50, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('witness_ids', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ivf_sperm_analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfSpermCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_id', models.IntegerField(blank=True, null=True)),
                ('time_entered', models.DateTimeField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('source_id', models.IntegerField(blank=True, null=True)),
                ('state_id', models.IntegerField(blank=True, null=True)),
                ('donor_code', models.CharField(blank=True, max_length=20, null=True)),
                ('procedure_id', models.IntegerField(blank=True, null=True)),
                ('abstinence_days', models.IntegerField()),
                ('collection_date', models.DateTimeField(blank=True, null=True)),
                ('witness_ids', models.CharField(blank=True, max_length=20, null=True)),
                ('analysis_post_report', models.TextField(blank=True, null=True)),
                ('analysis_pre_report', models.TextField(blank=True, null=True)),
                ('production_time', models.DateTimeField(blank=True, null=True)),
                ('analysis_time', models.DateTimeField(blank=True, null=True)),
                ('preparation_method', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ivf_sperm_collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfSpermProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ivf_sperm_procedure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfTransferType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ivf_transfer_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IvfTreatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_id', models.IntegerField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('day_of_cycle', models.IntegerField(blank=True, null=True)),
                ('buserelin', models.CharField(blank=True, max_length=70, null=True)),
                ('guserelin', models.CharField(blank=True, max_length=70, null=True)),
                ('findings', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ivf_treatment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KinRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'db_table': 'kin_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'db_table': 'lab_combo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabComboData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_combo_id', models.IntegerField()),
                ('lab_id', models.IntegerField()),
            ],
            options={
                'db_table': 'lab_combo_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_group_id', models.CharField(blank=True, max_length=11, null=True)),
                ('lab_note', models.TextField(blank=True, null=True)),
                ('when', models.DateTimeField(blank=True, null=True)),
                ('who', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'lab_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_group_id', models.CharField(max_length=50)),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('requested_by', models.IntegerField(blank=True, null=True)),
                ('request_note', models.TextField(blank=True, null=True)),
                ('time_entered', models.DateTimeField()),
                ('preferred_specimens', models.TextField(blank=True, null=True)),
                ('hospid', models.IntegerField(blank=True, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('urgent', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lab_requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abnormal_lab_value', models.IntegerField()),
                ('approved', models.IntegerField()),
                ('approved_by', models.CharField(blank=True, max_length=15, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lab_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabSpecimen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'lab_specimen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'lab_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabTemplateData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=32)),
                ('reference', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'lab_template_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabtestsConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('lab_template_id', models.IntegerField()),
                ('testunit_symbol', models.CharField(blank=True, db_column='testUnit_Symbol', max_length=30, null=True)),
                ('reference', models.TextField(blank=True, null=True)),
                ('hospid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'labtests_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabtestsConfigCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
            ],
            options={
                'db_table': 'labtests_config_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabTestsGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('test_ids', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'lab_tests_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'lga',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LifeStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'life_style',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid', models.IntegerField()),
                ('group_id', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('attended_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('log_time', models.DateTimeField()),
                ('editor_id', models.IntegerField()),
                ('trig_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'log_appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MedicalExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('billing_code', models.CharField(max_length=10)),
                ('labs', models.CharField(blank=True, max_length=500, null=True)),
                ('procedures', models.CharField(blank=True, max_length=500, null=True)),
                ('imagings', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'medical_exam',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageDispatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=12)),
                ('message', models.TextField()),
                ('sms_channel_address', models.CharField(max_length=20)),
                ('sms_delivery_status', models.IntegerField()),
                ('email_channel_address', models.CharField(max_length=200)),
                ('email_delivery_status', models.IntegerField()),
                ('voice_channel_address', models.CharField(blank=True, max_length=20, null=True)),
                ('voice_delivery_status', models.IntegerField()),
                ('export_status', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'message_dispatch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageDistributionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=11)),
                ('list', models.CharField(max_length=50)),
                ('date_added', models.IntegerField()),
            ],
            options={
                'db_table': 'message_distribution_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageQueueTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.IntegerField()),
                ('date_generated', models.DateTimeField()),
                ('source', models.CharField(max_length=20)),
                ('message_content', models.CharField(max_length=320)),
                ('message_status', models.IntegerField()),
                ('patient', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'message_queue_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient', models.CharField(max_length=64)),
                ('channel_subscribed', models.IntegerField()),
            ],
            options={
                'db_table': 'message_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_text', models.TextField()),
                ('text_type', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'message_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('staffid', models.CharField(blank=True, db_column='staffId', max_length=11, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=6, null=True)),
                ('when', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NursingService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16, unique=True)),
                ('service_name', models.CharField(blank=True, max_length=50, null=True)),
                ('hospid', models.IntegerField()),
            ],
            options={
                'db_table': 'nursing_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NursingTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'nursing_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Onlinestatus',
            fields=[
                ('staffid', models.IntegerField(db_column='staffId', primary_key=True, serialize=False)),
                ('is_online', models.IntegerField()),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'onlinestatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ophthalmology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_id', models.IntegerField()),
                ('ophthalmology_template_id', models.IntegerField(blank=True, null=True)),
                ('unit_symbol', models.CharField(blank=True, max_length=30, null=True)),
                ('reference', models.TextField(blank=True, null=True)),
                ('hospid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ophthalmology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
            ],
            options={
                'db_table': 'ophthalmology_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ophthalmology_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyItemBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('item_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ophthalmology_item_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyItemsRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('requested_by', models.IntegerField(blank=True, null=True)),
                ('received_by', models.DateTimeField(blank=True, null=True)),
                ('delivered_by', models.DateTimeField(blank=True, null=True)),
                ('time_entered', models.DateTimeField()),
                ('time_received', models.DateTimeField(blank=True, null=True)),
                ('time_delivered', models.DateTimeField(blank=True, null=True)),
                ('amount', models.FloatField()),
                ('status', models.CharField(max_length=9)),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ophthalmology_items_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyItemsRequestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.IntegerField()),
                ('item_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ophthalmology_items_request_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_code', models.CharField(max_length=7)),
                ('patient_id', models.CharField(blank=True, max_length=11, null=True)),
                ('requested_by', models.CharField(blank=True, max_length=15, null=True)),
                ('time_entered', models.DateTimeField()),
                ('preferred_specimens', models.TextField(blank=True, null=True)),
                ('hospid', models.IntegerField(blank=True, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ophthalmology_requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ophthalmology_template_id', models.IntegerField()),
                ('patient_ophthalmology_id', models.IntegerField()),
                ('abnormal_ophthalmology_value', models.IntegerField()),
                ('approved', models.IntegerField()),
                ('approved_by', models.CharField(blank=True, max_length=15, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ophthalmology_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyResultData',
            fields=[
                ('ophthalmology_result_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ophthalmology_template_data_id', models.IntegerField()),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ophthalmology_result_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologySpecimen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'ophthalmology_specimen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'ophthalmology_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OphthalmologyTemplateData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ophthalmology_template_id', models.IntegerField()),
                ('label', models.CharField(max_length=32)),
                ('reference', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'ophthalmology_template_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('expiration', models.DateField(blank=True, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=70)),
                ('billing_code', models.CharField(blank=True, max_length=30, null=True)),
                ('create_date', models.DateTimeField()),
                ('create_user_id', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'package',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'package_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_id', models.IntegerField()),
                ('item_code', models.CharField(max_length=20)),
                ('quantity', models.IntegerField()),
            ],
            options={
                'db_table': 'package_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('package_id', models.IntegerField()),
                ('date_subscribed', models.DateTimeField()),
                ('active', models.IntegerField()),
                ('create_user', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'package_subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('original_quantity', models.IntegerField()),
                ('quantity_left', models.IntegerField()),
                ('item_code', models.CharField(max_length=12)),
                ('date_bought', models.DateTimeField()),
            ],
            options={
                'db_table': 'package_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageTokenUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('item_code', models.CharField(blank=True, max_length=20, null=True)),
                ('quantity', models.IntegerField()),
                ('use_date', models.DateTimeField()),
                ('responsible_id', models.IntegerField()),
            ],
            options={
                'db_table': 'package_token_usage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientAllergen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('patient_id', models.CharField(db_column='patient_ID', max_length=11)),
                ('allergen', models.CharField(blank=True, max_length=50, null=True)),
                ('reaction', models.TextField()),
                ('severity', models.CharField(max_length=11)),
                ('noted_by', models.IntegerField()),
                ('date_noted', models.DateTimeField()),
                ('hospid', models.IntegerField(blank=True, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
                ('drug_super_gen_id', models.IntegerField(blank=True, null=True)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_allergen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientAntenatal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(blank=True, max_length=15, null=True)),
                ('family_id', models.CharField(blank=True, max_length=15, null=True)),
                ('family_role', models.CharField(blank=True, max_length=8, null=True)),
                ('antenatal_status', models.CharField(blank=True, max_length=10, null=True)),
                ('date_antenated', models.DateField(blank=True, null=True)),
                ('date_last_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'patient_antenatal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientAntenatalItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15)),
                ('chart_item_id', models.IntegerField()),
                ('chart_item_level', models.IntegerField()),
                ('type', models.CharField(max_length=11)),
                ('due_date', models.DateField()),
                ('date_taken', models.DateField(blank=True, null=True)),
                ('taken_by', models.CharField(blank=True, max_length=15, null=True)),
                ('expiration_date', models.DateField()),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_antenatal_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientAntenatalUsages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('item_id', models.IntegerField()),
                ('item_code', models.CharField(blank=True, max_length=50, null=True)),
                ('item_type', models.CharField(max_length=12)),
                ('usages', models.IntegerField()),
                ('date_used', models.DateTimeField()),
            ],
            options={
                'db_table': 'patient_antenatal_usages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('note', models.CharField(max_length=255)),
                ('document_url', models.CharField(max_length=255)),
                ('date_added', models.DateTimeField()),
                ('user_add_id', models.IntegerField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientCareMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_patient_id', models.IntegerField()),
                ('care_member_id', models.IntegerField(blank=True, null=True)),
                ('care_team_id', models.IntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('entry_time', models.DateTimeField()),
                ('changed_by', models.IntegerField(blank=True, null=True)),
                ('change_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('type', models.CharField(max_length=6)),
                ('primary_care_id', models.IntegerField(blank=True, null=True)),
                ('primary_care_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'patient_care_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientDemograph',
            fields=[
                ('patient_id', models.AutoField(db_column='patient_ID', primary_key=True, serialize=False)),
                ('active', models.IntegerField()),
                ('deceased', models.IntegerField()),
                ('legacy_patient_id', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=75, null=True)),
                ('login_id', models.IntegerField(blank=True, null=True)),
                ('fname', models.CharField(max_length=20)),
                ('lname', models.CharField(max_length=20)),
                ('mname', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField()),
                ('dob_estimated', models.IntegerField()),
                ('sex', models.CharField(max_length=6)),
                ('email', models.CharField(max_length=128)),
                ('address', models.CharField(max_length=70)),
                ('nationality', models.IntegerField()),
                ('occupation', models.TextField(blank=True, null=True)),
                ('work_address', models.TextField(blank=True, null=True)),
                ('industry_id', models.IntegerField(blank=True, null=True)),
                ('religion_id', models.IntegerField(blank=True, null=True)),
                ('lga_id', models.IntegerField(verbose_name=mobiles.models.Lga)),
                ('district_id', models.IntegerField(blank=True, null=True)),
                ('state_id', models.IntegerField()),
                ('state_res_id', models.IntegerField()),
                ('lga_res_id', models.IntegerField()),
                ('district_res_id', models.IntegerField(blank=True, null=True)),
                ('kinsfirstname', models.CharField(db_column='KinsFirstName', max_length=20)),
                ('kinslastname', models.CharField(db_column='KinsLastName', max_length=20)),
                ('kinsphone', models.CharField(db_column='KinsPhone', max_length=20)),
                ('kinsaddress', models.CharField(db_column='KinsAddress', max_length=70)),
                ('kin_relation_id', models.IntegerField(blank=True, null=True)),
                ('registered_by', models.CharField(db_column='registered_By', max_length=11)),
                ('phonenumber', models.CharField(blank=True, max_length=17, null=True)),
                ('foreign_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bloodgroup', models.CharField(blank=True, max_length=10, null=True)),
                ('bloodtype', models.CharField(blank=True, max_length=10, null=True)),
                ('basehospital', models.CharField(blank=True, max_length=70, null=True)),
                ('transferedto', models.CharField(blank=True, max_length=70, null=True)),
                ('enrollment_date', models.DateTimeField()),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('referral_company_id', models.IntegerField(blank=True, null=True)),
                ('socio_economic', models.IntegerField(blank=True, null=True)),
                ('lifestyle', models.CharField(blank=True, max_length=20, null=True)),
                ('care_manager_id', models.IntegerField(blank=True, null=True)),
                ('scheme_at_registration_id', models.IntegerField(blank=True, null=True)),
                ('last_modified_by', models.IntegerField(blank=True, null=True)),
                ('last_modified_date', models.DateTimeField(blank=True, null=True)),
                ('cum_annual_days_on_admission', models.IntegerField()),
                ('portal', models.CharField(max_length=7)),
            ],
            options={
                'db_table': 'patient_demograph',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientDentistry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestcode', models.CharField(blank=True, db_column='requestCode', max_length=20, null=True)),
                ('patient_id', models.IntegerField()),
                ('dentistry_ids', models.CharField(max_length=200)),
                ('request_note', models.CharField(blank=True, max_length=120, null=True)),
                ('requested_by_id', models.IntegerField()),
                ('request_date', models.DateTimeField()),
                ('approved', models.IntegerField()),
                ('approved_by_id', models.IntegerField(blank=True, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('date_last_modified', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('cancelled', models.IntegerField()),
                ('cancel_date', models.DateTimeField(blank=True, null=True)),
                ('canceled_by_id', models.IntegerField(blank=True, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_dentistry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientDentistryNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_dentistry_id', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField()),
                ('note_area', models.CharField(max_length=50)),
                ('create_uid', models.CharField(max_length=15)),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'patient_dentistry_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientDiagnoses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(db_column='patient_ID')),
                ('date_of_entry', models.DateTimeField()),
                ('diagnosed_by', models.IntegerField(blank=True, null=True)),
                ('diagnosisnote', models.TextField(blank=True, db_column='diagnosisNote', null=True)),
                ('diag_type', models.CharField(blank=True, db_column='diag-type', max_length=2, null=True)),
                ('diagnosis', models.CharField(blank=True, max_length=300, null=True)),
                ('field_status', models.CharField(blank=True, db_column='_status', max_length=12, null=True)),
                ('severity', models.CharField(max_length=9)),
                ('active', models.IntegerField()),
                ('hospital_diagnosed', models.CharField(blank=True, max_length=50, null=True)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('body_part_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_diagnoses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_id', models.IntegerField(blank=True, null=True)),
                ('patient_id', models.IntegerField()),
                ('history_id', models.IntegerField()),
                ('create_uid', models.IntegerField()),
                ('create_date', models.DateTimeField()),
                ('instance_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=9, null=True)),
            ],
            options={
                'db_table': 'patient_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientHistoryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_history_id', models.IntegerField()),
                ('history_template_data_id', models.IntegerField()),
                ('value', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'patient_history_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientInRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomid', models.CharField(blank=True, db_column='roomID', max_length=5, null=True)),
                ('patientid', models.CharField(blank=True, db_column='patientID', max_length=15, null=True)),
                ('queue_for', models.CharField(max_length=6)),
                ('time_in', models.DateTimeField()),
            ],
            options={
                'db_table': 'patient_in_room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientItemRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('group_code', models.CharField(blank=True, max_length=50, null=True)),
                ('requested_by', models.IntegerField()),
                ('requested_date', models.DateTimeField()),
                ('service_center_id', models.IntegerField()),
                ('inpatient_id', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('procedure_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_item_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientItemRequestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_code', models.CharField(max_length=20)),
                ('generic_id', models.IntegerField(blank=True, null=True)),
                ('item_id', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('filled_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=9)),
                ('cancelled_by', models.IntegerField(blank=True, null=True)),
                ('cancelled_on', models.DateTimeField(blank=True, null=True)),
                ('hosp_id', models.IntegerField(blank=True, null=True)),
                ('cancelled_note', models.CharField(blank=True, max_length=500, null=True)),
                ('filled_by', models.IntegerField(blank=True, null=True)),
                ('filled_qty', models.IntegerField(blank=True, null=True)),
                ('completed_by', models.IntegerField(blank=True, null=True)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_item_request_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientLabs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('test_id', models.IntegerField(blank=True, null=True)),
                ('lab_group_id', models.CharField(max_length=50)),
                ('performed_by', models.CharField(blank=True, max_length=11, null=True)),
                ('test_notes', models.TextField(blank=True, null=True)),
                ('test_specimen_ids', models.CharField(blank=True, max_length=30, null=True)),
                ('test_date', models.DateTimeField(blank=True, null=True)),
                ('specimen_collected_by', models.CharField(blank=True, max_length=15, null=True)),
                ('specimen_notes', models.CharField(blank=True, max_length=50, null=True)),
                ('specimen_date', models.DateTimeField(blank=True, null=True)),
                ('received', models.IntegerField()),
                ('specimen_received_by', models.IntegerField(blank=True, null=True)),
                ('field_status', models.CharField(db_column='_status', max_length=9)),
                ('bill_line_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'patient_labs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientMedicalReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestcode', models.CharField(blank=True, db_column='requestCode', max_length=20, null=True)),
                ('patient_id', models.IntegerField()),
                ('exam_id', models.IntegerField()),
                ('request_note', models.CharField(blank=True, max_length=120, null=True)),
                ('requested_by_id', models.IntegerField()),
                ('request_date', models.DateTimeField()),
                ('approved', models.IntegerField()),
                ('approved_by_id', models.IntegerField(blank=True, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('date_last_modified', models.DateTimeField()),
                ('cancelled', models.IntegerField()),
                ('cancel_date', models.DateTimeField(blank=True, null=True)),
                ('canceled_by_id', models.IntegerField(blank=True, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('labs', models.IntegerField(blank=True, null=True)),
                ('imagings', models.CharField(blank=True, max_length=100, null=True)),
                ('procedures', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'patient_medical_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientMedicalReportNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_medical_report_id', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField()),
                ('create_uid', models.CharField(max_length=15)),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'patient_medical_report_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientOphthalmology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(blank=True, max_length=15, null=True)),
                ('ophthalmology_id', models.IntegerField(blank=True, null=True)),
                ('ophthalmology_group_code', models.CharField(max_length=7)),
                ('performed_by', models.CharField(blank=True, max_length=11, null=True)),
                ('test_notes', models.TextField(blank=True, null=True)),
                ('ophthalmology_specimen_ids', models.CharField(blank=True, max_length=30, null=True)),
                ('test_date', models.DateTimeField(blank=True, null=True)),
                ('specimen_collected_by', models.CharField(blank=True, max_length=15, null=True)),
                ('specimen_notes', models.CharField(blank=True, max_length=50, null=True)),
                ('specimen_date', models.DateTimeField(blank=True, null=True)),
                ('received', models.IntegerField()),
                ('specimen_received_by', models.IntegerField(blank=True, null=True)),
                ('field_status', models.CharField(db_column='_status', max_length=9)),
            ],
            options={
                'db_table': 'patient_ophthalmology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientPhysicalAssessments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15)),
                ('heent', models.CharField(db_column='HEENT', max_length=200)),
                ('heent_note', models.CharField(blank=True, db_column='HEENT_Note', max_length=70, null=True)),
                ('heart', models.CharField(db_column='Heart', max_length=200)),
                ('heart_note', models.CharField(blank=True, db_column='Heart_Note', max_length=70, null=True)),
                ('lungs', models.CharField(db_column='Lungs', max_length=200)),
                ('lungs_note', models.CharField(blank=True, db_column='Lungs_Note', max_length=70, null=True)),
                ('abdomen', models.CharField(db_column='Abdomen', max_length=200)),
                ('abdomen_note', models.CharField(blank=True, db_column='Abdomen_Note', max_length=70, null=True)),
                ('extremites', models.CharField(db_column='Extremites', max_length=200)),
                ('extremites_note', models.CharField(blank=True, db_column='Extremites_Note', max_length=70, null=True)),
                ('skin', models.CharField(db_column='Skin', max_length=200)),
                ('skin_note', models.CharField(blank=True, db_column='Skin_Note', max_length=70, null=True)),
                ('neuro', models.CharField(db_column='Neuro', max_length=200)),
                ('neuro_note', models.CharField(blank=True, db_column='Neuro_Note', max_length=70, null=True)),
                ('assessed_by', models.CharField(max_length=15)),
                ('entry_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'patient_physical_assessments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientPhysicalExamination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('physical_examination_id', models.IntegerField()),
                ('reviewer_id', models.IntegerField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_physical_examination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientPreConditions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15)),
                ('field_condition', models.CharField(db_column='_condition', max_length=150)),
                ('diag_date', models.DateField(blank=True, null=True)),
                ('severity', models.IntegerField()),
                ('therapy', models.CharField(max_length=20)),
                ('therapy_start_date', models.DateField(blank=True, null=True)),
                ('response', models.IntegerField()),
                ('active', models.IntegerField()),
                ('history', models.IntegerField()),
                ('entered_by', models.CharField(max_length=15)),
                ('date_entered', models.DateTimeField()),
                ('hospid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_pre_conditions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('procedure_id', models.IntegerField()),
                ('request_id', models.CharField(max_length=20)),
                ('request_date', models.DateTimeField()),
                ('request_note', models.TextField(blank=True, null=True)),
                ('condition_ids', models.CharField(blank=True, max_length=70, null=True)),
                ('field_status', models.CharField(db_column='_status', max_length=9)),
                ('closing_text', models.CharField(blank=True, max_length=255, null=True)),
                ('resource_id', models.IntegerField(blank=True, null=True)),
                ('requested_by_id', models.IntegerField()),
                ('billed', models.IntegerField()),
                ('theatre_id', models.IntegerField(blank=True, null=True)),
                ('has_anesthesiologist', models.IntegerField()),
                ('anesthesiologist_id', models.IntegerField(blank=True, null=True)),
                ('has_surgeon', models.IntegerField()),
                ('surgeon_id', models.IntegerField(blank=True, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('bodypart_id', models.IntegerField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=20, null=True)),
                ('source_instance_id', models.IntegerField(blank=True, null=True)),
                ('scheduled_resource_ids', models.CharField(blank=True, max_length=120, null=True)),
                ('time_start', models.DateTimeField(blank=True, null=True)),
                ('time_stop', models.DateTimeField(blank=True, null=True)),
                ('scheduled_on', models.DateTimeField(blank=True, null=True)),
                ('scheduled_by', models.IntegerField(blank=True, null=True)),
                ('time_started', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_procedure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProcedureItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('item_id', models.IntegerField(blank=True, null=True)),
                ('generic_id', models.IntegerField(blank=True, null=True)),
                ('service_center_id', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('batch_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_procedure_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProcedureNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('staff_id', models.IntegerField()),
                ('note_time', models.DateTimeField()),
                ('note_type', models.CharField(blank=True, max_length=14, null=True)),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_procedure_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProcedureNursingTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('service_id', models.IntegerField(blank=True, null=True)),
                ('create_uid', models.IntegerField()),
                ('date_field', models.DateTimeField(db_column='date_')),
            ],
            options={
                'db_table': 'patient_procedure_nursing_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProcedureRegimen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('generic_id', models.IntegerField()),
                ('quantity', models.CharField(max_length=30)),
                ('request_time', models.DateTimeField()),
                ('request_user_id', models.IntegerField()),
                ('generic_note', models.TextField(blank=True, null=True)),
                ('drugs', models.IntegerField(blank=True, null=True)),
                ('batch', models.IntegerField(blank=True, null=True)),
                ('units', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'patient_procedure_regimen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProcedureReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('request_time', models.DateTimeField()),
                ('report_user_id', models.IntegerField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'patient_procedure_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProcedureResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('staff_id', models.IntegerField(blank=True, null=True)),
                ('resource_type_id', models.IntegerField(blank=True, null=True)),
                ('create_uid', models.IntegerField()),
                ('date_field', models.DateTimeField(db_column='date_')),
            ],
            options={
                'db_table': 'patient_procedure_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('type', models.CharField(max_length=13)),
                ('sub_type', models.CharField(blank=True, max_length=50, null=True)),
                ('entry_time', models.DateTimeField()),
                ('attended_time', models.DateTimeField(blank=True, null=True)),
                ('tag_no', models.IntegerField()),
                ('blocked_by', models.IntegerField(blank=True, null=True)),
                ('seen_by', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=9, null=True)),
                ('cancelled_by', models.IntegerField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('follow_up', models.IntegerField()),
                ('review', models.IntegerField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_queue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientRegimens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external', models.IntegerField()),
                ('patient_id', models.IntegerField()),
                ('when', models.DateTimeField()),
                ('group_code', models.CharField(max_length=20, unique=True)),
                ('requested_by', models.IntegerField(blank=True, null=True)),
                ('prescribed_by', models.CharField(blank=True, max_length=50, null=True)),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('hospid', models.IntegerField(blank=True, null=True)),
                ('refill_off', models.IntegerField(blank=True, null=True)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_regimens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientRegimensData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_code', models.CharField(max_length=20)),
                ('drug_id', models.IntegerField(blank=True, null=True)),
                ('drug_generic_id', models.IntegerField()),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('dose', models.CharField(max_length=200)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('frequency', models.CharField(max_length=20)),
                ('refillable', models.IntegerField()),
                ('status', models.CharField(max_length=9)),
                ('requested_by', models.CharField(blank=True, max_length=14, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=14, null=True)),
                ('filled_by', models.CharField(blank=True, max_length=14, null=True)),
                ('filled_on', models.DateTimeField(blank=True, null=True)),
                ('completed_by', models.CharField(blank=True, max_length=14, null=True)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('cancelled_by', models.CharField(blank=True, max_length=14, null=True)),
                ('cancelled_on', models.DateTimeField(blank=True, null=True)),
                ('cancel_note', models.TextField(blank=True, null=True)),
                ('hospid', models.IntegerField(blank=True, null=True)),
                ('bodypart_id', models.IntegerField(blank=True, null=True)),
                ('external_source', models.IntegerField()),
                ('refill_date', models.DateTimeField(blank=True, null=True)),
                ('refill_number', models.IntegerField(blank=True, null=True)),
                ('bill_line_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'patient_regimens_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientScan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestcode', models.CharField(blank=True, db_column='requestCode', max_length=20, null=True)),
                ('patient_id', models.IntegerField()),
                ('scan_ids', models.CharField(max_length=200)),
                ('request_note', models.CharField(blank=True, max_length=120, null=True)),
                ('requested_by_id', models.IntegerField()),
                ('request_date', models.DateTimeField()),
                ('approved', models.IntegerField()),
                ('approved_by_id', models.IntegerField(blank=True, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('date_last_modified', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('cancelled', models.IntegerField()),
                ('cancel_date', models.DateTimeField(blank=True, null=True)),
                ('canceled_by_id', models.IntegerField(blank=True, null=True)),
                ('referral_id', models.IntegerField(blank=True, null=True)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
                ('captured', models.IntegerField()),
                ('captured_date', models.DateTimeField(blank=True, null=True)),
                ('captured_by_id', models.IntegerField(blank=True, null=True)),
                ('resource_id', models.IntegerField(blank=True, null=True)),
                ('schedule_date_start', models.DateTimeField(blank=True, null=True)),
                ('schedule_date_end', models.DateTimeField(blank=True, null=True)),
                ('scheduled_on', models.DateTimeField(blank=True, null=True)),
                ('scheduled_by_id', models.IntegerField(blank=True, null=True)),
                ('bill_line_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'patient_scan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientScanAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_scan_id', models.IntegerField()),
                ('attachment_url', models.TextField()),
                ('note', models.CharField(max_length=255)),
                ('timeadded', models.DateTimeField(db_column='timeAdded')),
                ('create_uid', models.IntegerField()),
            ],
            options={
                'db_table': 'patient_scan_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientScanNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_scan_id', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField()),
                ('note_area', models.CharField(max_length=50)),
                ('create_uid', models.CharField(max_length=15)),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'patient_scan_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientScanTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'patient_scan_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientSystemsReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('systems_review_id', models.IntegerField()),
                ('reviewer_id', models.IntegerField()),
                ('assessment_id', models.IntegerField(blank=True, null=True)),
                ('antenatal_instance_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=9, null=True)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_systems_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientVaccine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15)),
                ('vaccine_id', models.IntegerField()),
                ('is_booster', models.IntegerField()),
                ('vaccine_level', models.IntegerField()),
                ('due_date', models.DateField(blank=True, null=True)),
                ('billed', models.IntegerField()),
                ('entry_date', models.DateField(blank=True, null=True)),
                ('taken_by', models.CharField(blank=True, max_length=15, null=True)),
                ('take_type', models.CharField(max_length=5)),
                ('internal', models.IntegerField()),
                ('route', models.CharField(max_length=2)),
                ('site', models.CharField(blank=True, max_length=50, null=True)),
                ('dosage', models.CharField(blank=True, max_length=10, null=True)),
                ('real_administer_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_vaccine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientVaccineBooster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15)),
                ('vaccinebooster_id', models.IntegerField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('next_due_date', models.DateField(blank=True, null=True)),
                ('last_taken', models.DateField(blank=True, null=True)),
                ('charged', models.IntegerField()),
            ],
            options={
                'db_table': 'patient_vaccine_booster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientVaccineBoosterHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patientvaccinebooster_id', models.IntegerField()),
                ('date_taken', models.DateField()),
                ('taken_by', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'patient_vaccine_booster_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientVaccineTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15)),
                ('vaccine_id', models.IntegerField()),
                ('vaccine_level', models.IntegerField()),
                ('due_date', models.DateField()),
                ('paid', models.IntegerField()),
                ('date_taken', models.DateField(blank=True, null=True)),
                ('taken_by', models.CharField(blank=True, max_length=15, null=True)),
                ('expiration_date', models.DateField()),
            ],
            options={
                'db_table': 'patient_vaccine_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientVisitNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(db_column='patient_ID')),
                ('date_of_entry', models.DateTimeField()),
                ('noted_by', models.IntegerField()),
                ('description', models.TextField()),
                ('note_type', models.CharField(blank=True, max_length=2, null=True)),
                ('reason', models.CharField(max_length=26)),
                ('hospitalvisited', models.CharField(blank=True, max_length=70, null=True)),
                ('sourceapp', models.CharField(blank=True, max_length=15, null=True)),
                ('module', models.CharField(max_length=25)),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'patient_visit_notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientVitalPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'patient_vital_preference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=33)),
                ('ledger_id', models.CharField(blank=True, max_length=50, null=True)),
                ('hospid', models.IntegerField()),
            ],
            options={
                'db_table': 'payment_methods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicalAssessmentGroups',
            fields=[
                ('group_id', models.IntegerField(primary_key=True, serialize=False)),
                ('patient_id', models.CharField(max_length=15)),
                ('entry_date', models.DateTimeField()),
                ('assessed_by', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'physical_assessment_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicalExamination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbr', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=150)),
                ('category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'physical_examination',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicalExaminationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'physical_examination_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysiotherapyBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestcode', models.CharField(blank=True, db_column='requestCode', max_length=25, null=True)),
                ('patient_id', models.IntegerField()),
                ('booking_date', models.DateTimeField()),
                ('specialization_id', models.IntegerField()),
                ('count', models.IntegerField()),
                ('booked_by', models.IntegerField()),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'physiotherapy_booking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysiotherapyItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'physiotherapy_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysiotherapyItemBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('item_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'physiotherapy_item_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysiotherapyItemsRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(blank=True, null=True)),
                ('requested_by', models.IntegerField(blank=True, null=True)),
                ('received_by', models.DateTimeField(blank=True, null=True)),
                ('delivered_by', models.DateTimeField(blank=True, null=True)),
                ('time_entered', models.DateTimeField()),
                ('time_received', models.DateTimeField(blank=True, null=True)),
                ('time_delivered', models.DateTimeField(blank=True, null=True)),
                ('amount', models.FloatField()),
                ('status', models.CharField(max_length=9)),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'physiotherapy_items_request',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysiotherapyItemsRequestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.IntegerField()),
                ('item_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'physiotherapy_items_request_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhysiotherapySession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.IntegerField()),
                ('session_date', models.DateTimeField()),
                ('note', models.TextField()),
                ('noted_by', models.IntegerField()),
            ],
            options={
                'db_table': 'physiotherapy_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_id', models.IntegerField()),
                ('billing_code', models.CharField(max_length=10)),
                ('icd_code', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'procedure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureActionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('note', models.TextField()),
                ('time_entered', models.DateTimeField()),
                ('entered_by', models.IntegerField()),
                ('done', models.IntegerField()),
                ('done_by', models.IntegerField(blank=True, null=True)),
                ('done_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'procedure_action_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_procedure_id', models.IntegerField()),
                ('time_entered', models.DateTimeField()),
                ('entered_by', models.IntegerField()),
                ('url', models.TextField(blank=True, null=True)),
                ('mimetype', models.CharField(blank=True, max_length=70, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'procedure_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'procedure_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureChecklistTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'procedure_checklist_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureResourceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'procedure_resource_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureSpecialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True)),
            ],
            options={
                'db_table': 'procedure_specialty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'procedure_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcedureTemplateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'procedure_template_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProgressNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField()),
                ('note_type', models.CharField(blank=True, max_length=2, null=True)),
                ('noted_by', models.CharField(max_length=16)),
                ('entry_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'progress_note',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurgedDrugs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_id', models.BigIntegerField()),
                ('quantity', models.BigIntegerField()),
                ('amountlost', models.FloatField()),
                ('purgedby', models.CharField(max_length=60)),
                ('purge_date', models.DateField()),
            ],
            options={
                'db_table': 'purged_drugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RefererTemplateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'referer_template_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_company_id', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True)),
                ('account_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'referral',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferralCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=75, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=15, null=True)),
                ('account_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'referral_company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferralsQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('doctor_id', models.IntegerField()),
                ('datetime', models.DateTimeField()),
                ('acknowledged', models.IntegerField()),
                ('note', models.TextField()),
                ('external', models.IntegerField()),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'referrals_queue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferralTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('category_id', models.IntegerField()),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'referral_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'religion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=10)),
                ('modality', models.CharField(blank=True, max_length=2, null=True)),
                ('ae_title', models.CharField(blank=True, max_length=50, null=True)),
                ('station_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RevenueAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_source_id', models.IntegerField()),
                ('insurance_scheme_id', models.IntegerField()),
                ('receivable_account_id', models.IntegerField()),
            ],
            options={
                'db_table': 'revenue_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('ward_id', models.IntegerField()),
                ('type_id', models.IntegerField()),
            ],
            options={
                'db_table': 'room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16)),
                ('label', models.CharField(blank=True, max_length=50, null=True)),
                ('hospital_id', models.IntegerField()),
            ],
            options={
                'db_table': 'room_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoundNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_id', models.IntegerField()),
                ('round', models.IntegerField()),
                ('note', models.IntegerField()),
            ],
            options={
                'db_table': 'round_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('billing_code', models.CharField(max_length=10)),
                ('category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'scan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScanCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'scan_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceCentre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_id', models.IntegerField()),
                ('cost_centre_id', models.IntegerField()),
                ('type', models.CharField(max_length=13)),
                ('name', models.CharField(max_length=70)),
                ('erp_location_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'service_centre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('access', models.IntegerField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'sform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SformAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
                ('question_id', models.IntegerField()),
                ('time_entered', models.DateTimeField()),
                ('create_user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'sform_answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SformAnswerOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sform_answer_id', models.IntegerField()),
                ('answer_text', models.CharField(blank=True, max_length=255, null=True)),
                ('option_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sform_answer_option',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SformCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'sform_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SformOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sform_question_id', models.IntegerField()),
                ('text', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'sform_option',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SformQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sform_id', models.IntegerField()),
                ('text', models.TextField()),
                ('type', models.CharField(blank=True, max_length=25, null=True)),
                ('page', models.IntegerField()),
            ],
            options={
                'db_table': 'sform_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('date_added', models.DateTimeField(blank=True, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'signature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SimulationSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'simulation_size',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocioEconomicStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'socio_economic_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('note', models.CharField(max_length=200)),
                ('noted_by', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('dismissed', models.IntegerField(blank=True, null=True)),
                ('alert_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'special_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaffCareTeam',
            fields=[
                ('team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('staff_id', models.IntegerField()),
            ],
            options={
                'db_table': 'staff_care_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaffDirectory',
            fields=[
                ('staffid', models.AutoField(db_column='staffId', primary_key=True, serialize=False)),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
                ('department_id', models.IntegerField(blank=True, null=True)),
                ('specialization_id', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(max_length=50)),
                ('pswd', models.CharField(max_length=100)),
                ('profession', models.CharField(blank=True, max_length=16, null=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('roles', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=8, null=True)),
                ('sip_user_name', models.CharField(blank=True, max_length=8, null=True)),
                ('sip_password', models.CharField(blank=True, max_length=8, null=True)),
                ('sip_extension', models.CharField(blank=True, max_length=8, null=True)),
                ('folio_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'staff_directory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaffRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'staff_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaffSpecialization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=16, unique=True)),
                ('staff_type', models.CharField(blank=True, max_length=50, null=True)),
                ('hospid', models.IntegerField()),
                ('inpatient', models.IntegerField()),
                ('outpatient', models.IntegerField()),
            ],
            options={
                'db_table': 'staff_specialization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StiCareEntryPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'db_table': 'sti_care_entry_point',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StiPriorArt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'db_table': 'sti_prior_art',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StiTestMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'db_table': 'sti_test_mode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemsReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'systems_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemsReviewCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(blank=True, max_length=14, null=True)),
            ],
            options={
                'db_table': 'systems_review_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
            ],
            options={
                'db_table': 'test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nr', models.IntegerField(blank=True, null=True, unique=True)),
            ],
            options={
                'db_table': 'test_key',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VaccineLevels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccine_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('start_index', models.IntegerField()),
                ('end_index', models.IntegerField()),
                ('start_age', models.IntegerField()),
                ('end_age', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('start_age_scale', models.CharField(max_length=5)),
                ('end_age_scale', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'vaccine_levels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vaccines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_code', models.CharField(max_length=15)),
                ('label', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=1024)),
                ('default_price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'vaccines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VaccinesBooster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccine_id', models.IntegerField()),
                ('start_age', models.IntegerField()),
                ('start_age_scale', models.CharField(max_length=5)),
                ('interval_field', models.IntegerField(db_column='interval_')),
                ('interval_scale', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'vaccines_booster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('unit', models.CharField(blank=True, max_length=15, null=True)),
                ('min_val', models.CharField(blank=True, max_length=11, null=True)),
                ('max_val', models.CharField(blank=True, max_length=11, null=True)),
                ('pattern', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'vital',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VitalSign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('read_date', models.DateTimeField()),
                ('value', models.CharField(max_length=16)),
                ('in_patient_id', models.IntegerField(blank=True, null=True)),
                ('type_id', models.IntegerField()),
                ('hospital_id', models.IntegerField()),
                ('read_by', models.IntegerField()),
                ('encounter_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vital_sign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8, unique=True)),
                ('batch_id', models.IntegerField()),
                ('date_used', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'voucher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VoucherBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('amount', models.FloatField()),
                ('type', models.CharField(max_length=8)),
                ('generator_id', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('date_generated', models.DateTimeField()),
                ('expiration_date', models.DateField()),
                ('service_centre_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'voucher_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('cost_centre_id', models.IntegerField()),
                ('block_id', models.IntegerField()),
                ('billing_code', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WardRound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=15)),
                ('admission_id', models.IntegerField()),
                ('frequency', models.IntegerField()),
                ('entry_time', models.DateTimeField()),
                ('last_round_time', models.DateTimeField(blank=True, null=True)),
                ('end_round_time', models.DateTimeField()),
                ('round_count', models.IntegerField()),
                ('status', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'ward_round',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LabResultData',
            fields=[
                ('lab_result', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='mobiles.LabResult')),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'lab_result_data',
                'managed': False,
            },
        ),
    ]
